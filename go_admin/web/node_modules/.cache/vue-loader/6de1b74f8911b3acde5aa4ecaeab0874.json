{"remainingRequest":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\view\\example\\simpleUploader\\simpleUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\view\\example\\simpleUploader\\simpleUploader.vue","mtime":1618795335783},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQp2YXIgbm90VXBsb2FkZWRDaHVua3MgPSBbXTsgLy8g5bey57uP5LiK5Lyg6L+H55qE5paH5Lu2Y2h1bmtOdW1iZXLmlbDnu4QNCnZhciBpc1VwbG9hZGVkID0gZmFsc2U7IC8vIOaWh+S7tuW3sue7j+S4iuS8oOaIkOWKn+S6hg0KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOw0KaW1wb3J0IHsgY2hlY2tGaWxlTWQ1LG1lcmdlRmlsZU1kNSB9IGZyb20gIkAvYXBpL3NpbXBsZVVwbG9hZGVyIjsNCmltcG9ydCBTcGFya01ENSBmcm9tICJzcGFyay1tZDUiOw0KY29uc3QgcGF0aCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEk7DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJzaW1wbGVVcGxvYWRlciIsDQogIGRhdGEoKXsNCiAgICByZXR1cm57DQogICAgICBtZDU6IiINCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwR2V0dGVycygidXNlciIsIFsidXNlckluZm8iLCAidG9rZW4iXSksDQogICAgc3RhdHVzVGV4dCgpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIHN1Y2Nlc3M6ICLmiJDlip/kuoYiLA0KICAgICAgICBlcnJvcjogIuWHuumUmeS6hiIsDQogICAgICAgIHVwbG9hZGluZzogIuS4iuS8oOS4rSIsDQogICAgICAgIHBhdXNlZDogIuaaguWBnOS4rSIsDQogICAgICAgIHdhaXRpbmc6ICLnrYnlvoXkuK0iDQogICAgICB9Ow0KICAgIH0sDQogICAgb3B0aW9ucygpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIHRhcmdldDogcGF0aCArICIvc2ltcGxlVXBsb2FkZXIvdXBsb2FkIiwNCiAgICAgICAgdGVzdENodW5rczogZmFsc2UsDQogICAgICAgIHNpbXVsdGFuZW91c1VwbG9hZHM6IDUsDQogICAgICAgIGNodW5rU2l6ZTogMiAqIDEwMjQgKiAxMDI0LA0KICAgICAgICBoZWFkZXJzOiB7DQogICAgICAgICAgIngtdG9rZW4iOiB0aGlzLnRva2VuLA0KICAgICAgICAgICJ4LXVzZXItaWQiOiB0aGlzLnVzZXJJbmZvLklEDQogICAgICAgIH0sDQogICAgICAgIGNoZWNrQ2h1bmtVcGxvYWRlZEJ5UmVzcG9uc2UoY2h1bmspIHsNCiAgICAgICAgICBpZiAoaXNVcGxvYWRlZCkgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIHJldHVybiB0cnVlIOS8muW/veeVpeW9k+WJjeaWh+S7tu+8jOS4jeS8muWGjeWPkemAgee7meWQjuWPsA0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIC8vIOagueaNruW3sue7j+S4iuS8oOi/h+eahOWIh+eJh+adpei/m+ihjOW/veeVpQ0KICAgICAgICAgICAgICByZXR1cm4gKA0KICAgICAgICAgICAgICAgIG5vdFVwbG9hZGVkQ2h1bmtzICYmDQogICAgICAgICAgICAgICAgbm90VXBsb2FkZWRDaHVua3Muc29tZSgNCiAgICAgICAgICAgICAgICAgIGl0ZW0gPT4gaXRlbS5jaHVua051bWJlciA9PSBjaHVuay5vZmZzZXQgKyAxDQogICAgICAgICAgICAgICAgKQ0KICAgICAgICAgICAgICApOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfTsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCg0KICAgIC8vIOS4iuS8oOWNleS4quaWh+S7tg0KICAgIGZpbGVBZGRlZChmaWxlKSB7DQogICAgICB0aGlzLmNvbXB1dGVNRDUoZmlsZSk7IC8vIOeUn+aIkE1ENQ0KICAgIH0sDQogICAgLy8g6K6h566XTUQ15YC8DQogICAgY29tcHV0ZU1ENShmaWxlKSB7DQogICAgICB2YXIgdGhhdCA9IHRoaXM7DQogICAgICBpc1VwbG9hZGVkID0gZmFsc2U7IC8vIOi/meS4quaWh+S7tuaYr+WQpuW3sue7j+S4iuS8oOaIkOWKn+i/hw0KICAgICAgbm90VXBsb2FkZWRDaHVua3MgPSBbXTsgLy8g5pyq5oiQ5Yqf55qEY2h1bmtOdW1iZXINCiAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsNCiAgICAgIHZhciBtZDUgPSAiIjsNCg0KICAgICAgZmlsZS5wYXVzZSgpOw0KDQogICAgICBmaWxlUmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUuZmlsZSk7DQogICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGFzeW5jIGZ1bmN0aW9uKGUpIHsNCiAgICAgICAgaWYgKGZpbGUuc2l6ZSAhPSBlLnRhcmdldC5yZXN1bHQuYnl0ZUxlbmd0aCkgew0KICAgICAgICAgIHRoaXMuZXJyb3IoDQogICAgICAgICAgICAiQnJvd3NlciByZXBvcnRlZCBzdWNjZXNzIGJ1dCBjb3VsZCBub3QgcmVhZCB0aGUgZmlsZSB1bnRpbCB0aGUgZW5kLiINCiAgICAgICAgICApOw0KICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgICAgICBtZDUgPSBTcGFya01ENS5BcnJheUJ1ZmZlci5oYXNoKGUudGFyZ2V0LnJlc3VsdCwgZmFsc2UpOw0KDQogICAgICAgIGZpbGUudW5pcXVlSWRlbnRpZmllciA9IG1kNTsNCiAgICAgICAgaWYgKG1kNSAhPSAiIikgew0KICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNoZWNrRmlsZU1kNSh7IG1kNTogbWQ1IH0pOw0KICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAwKSB7DQogICAgICAgICAgICBpZiAocmVzLmRhdGEuaXNEb25lKSB7DQogICAgICAgICAgICAgIC8vIOS4iuS8oOaIkOWKn+i/hw0KICAgICAgICAgICAgICBpc1VwbG9hZGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgdGhhdC4kbWVzc2FnZSh7DQogICAgICAgICAgICAgICAgbWVzc2FnZTogIuivpeaWh+S7tuW3sue7j+S4iuS8oOaIkOWKn+i/h+S6hu+8jOenkuS8oOaIkOWKn+OAgiIsDQogICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiDQogICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgIGZpbGUuY2FuY2VsKCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICBpc1VwbG9hZGVkID0gZmFsc2U7DQogICAgICAgICAgICAgIG5vdFVwbG9hZGVkQ2h1bmtzID0gcmVzLmRhdGEuY2h1bmtzOw0KICAgICAgICAgICAgICBpZihub3RVcGxvYWRlZENodW5rcy5sZW5ndGgpew0KICAgICAgICAgICAgICAgIGZpbGUucmVzdW1lKCk7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICANCiAgICAgIH07DQogICAgICBmaWxlUmVhZGVyLm9uZXJyb3IgPSBmdW5jdGlvbigpIHsNCiAgICAgICAgdGhpcy5lcnJvcigNCiAgICAgICAgICAiZ2VuZXJhdGVyIG1kNSDml7ZGaWxlUmVhZGVy5byC5q2l6K+75Y+W5paH5Lu25Ye66ZSZ5LqG77yMRmlsZVJlYWRlciBvbmVycm9yIHdhcyB0cmlnZ2VyZWQsIG1heWJlIHRoZSBicm93c2VyIGFib3J0ZWQgZHVlIHRvIGhpZ2ggbWVtb3J5IHVzYWdlLiINCiAgICAgICAgKTsNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgfTsNCiAgICB9LA0KICAgIC8vIOS4iuS8oOi/m+W6pg0KICAgIG9uRmlsZVByb2dyZXNzKCkge30sDQogICAgLy8g5LiK5Lyg5oiQ5YqfDQogICAgYXN5bmMgb25GaWxlU3VjY2Vzcyhyb290RmlsZSwgZmlsZSkgew0KICAgICAgYXdhaXQgbWVyZ2VGaWxlTWQ1KHttZDU6ZmlsZS51bmlxdWVJZGVudGlmaWVyLGZpbGVOYW1lOmZpbGUubmFtZX0pDQogICAgfSwNCiAgICBvbkZpbGVFcnJvcihyb290RmlsZSwgZmlsZSwgcmVzcG9uc2UpIHsNCiAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICBtZXNzYWdlOiByZXNwb25zZSwNCiAgICAgICAgdHlwZTogImVycm9yIg0KICAgICAgfSk7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["simpleUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"simpleUploader.vue","sourceRoot":"src/view/example/simpleUploader","sourcesContent":["<template>\r\n  <uploader\r\n    :options=\"options\"\r\n    :file-status-text=\"statusText\"\r\n    :autoStart=\"false\"\r\n    @file-added=\"fileAdded\"\r\n    @file-progress=\"onFileProgress\"\r\n    @file-success=\"onFileSuccess\"\r\n    @file-error=\"onFileError\"\r\n    class=\"uploader-example\"\r\n  >\r\n    <uploader-unsupport></uploader-unsupport>\r\n    <uploader-drop>\r\n      <p>拖拽文件至此或点击</p>\r\n      <uploader-btn>选择文件</uploader-btn>\r\n    </uploader-drop>\r\n    <uploader-list></uploader-list>\r\n  </uploader>\r\n</template>\r\n\r\n<script>\r\nvar notUploadedChunks = []; // 已经上传过的文件chunkNumber数组\r\nvar isUploaded = false; // 文件已经上传成功了\r\nimport { mapGetters } from \"vuex\";\r\nimport { checkFileMd5,mergeFileMd5 } from \"@/api/simpleUploader\";\r\nimport SparkMD5 from \"spark-md5\";\r\nconst path = process.env.VUE_APP_BASE_API;\r\nexport default {\r\n  name: \"simpleUploader\",\r\n  data(){\r\n    return{\r\n      md5:\"\"\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"user\", [\"userInfo\", \"token\"]),\r\n    statusText() {\r\n      return {\r\n        success: \"成功了\",\r\n        error: \"出错了\",\r\n        uploading: \"上传中\",\r\n        paused: \"暂停中\",\r\n        waiting: \"等待中\"\r\n      };\r\n    },\r\n    options() {\r\n      return {\r\n        target: path + \"/simpleUploader/upload\",\r\n        testChunks: false,\r\n        simultaneousUploads: 5,\r\n        chunkSize: 2 * 1024 * 1024,\r\n        headers: {\r\n          \"x-token\": this.token,\r\n          \"x-user-id\": this.userInfo.ID\r\n        },\r\n        checkChunkUploadedByResponse(chunk) {\r\n          if (isUploaded) {\r\n            return true; // return true 会忽略当前文件，不会再发送给后台\r\n          } else {\r\n              // 根据已经上传过的切片来进行忽略\r\n              return (\r\n                notUploadedChunks &&\r\n                notUploadedChunks.some(\r\n                  item => item.chunkNumber == chunk.offset + 1\r\n                )\r\n              );\r\n          }\r\n        }\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    // 上传单个文件\r\n    fileAdded(file) {\r\n      this.computeMD5(file); // 生成MD5\r\n    },\r\n    // 计算MD5值\r\n    computeMD5(file) {\r\n      var that = this;\r\n      isUploaded = false; // 这个文件是否已经上传成功过\r\n      notUploadedChunks = []; // 未成功的chunkNumber\r\n      var fileReader = new FileReader();\r\n      var md5 = \"\";\r\n\r\n      file.pause();\r\n\r\n      fileReader.readAsArrayBuffer(file.file);\r\n      fileReader.onload = async function(e) {\r\n        if (file.size != e.target.result.byteLength) {\r\n          this.error(\r\n            \"Browser reported success but could not read the file until the end.\"\r\n          );\r\n          return false;\r\n        }\r\n        md5 = SparkMD5.ArrayBuffer.hash(e.target.result, false);\r\n\r\n        file.uniqueIdentifier = md5;\r\n        if (md5 != \"\") {\r\n          const res = await checkFileMd5({ md5: md5 });\r\n          if (res.code == 0) {\r\n            if (res.data.isDone) {\r\n              // 上传成功过\r\n              isUploaded = true;\r\n              that.$message({\r\n                message: \"该文件已经上传成功过了，秒传成功。\",\r\n                type: \"success\"\r\n              });\r\n\r\n              file.cancel();\r\n            } else {\r\n              isUploaded = false;\r\n              notUploadedChunks = res.data.chunks;\r\n              if(notUploadedChunks.length){\r\n                file.resume();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        \r\n      };\r\n      fileReader.onerror = function() {\r\n        this.error(\r\n          \"generater md5 时FileReader异步读取文件出错了，FileReader onerror was triggered, maybe the browser aborted due to high memory usage.\"\r\n        );\r\n        return false;\r\n      };\r\n    },\r\n    // 上传进度\r\n    onFileProgress() {},\r\n    // 上传成功\r\n    async onFileSuccess(rootFile, file) {\r\n      await mergeFileMd5({md5:file.uniqueIdentifier,fileName:file.name})\r\n    },\r\n    onFileError(rootFile, file, response) {\r\n      this.$message({\r\n        message: response,\r\n        type: \"error\"\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.uploader-example {\r\n  width: 880px;\r\n  padding: 15px;\r\n  margin: 115px 15px 20px;\r\n  font-size: 12px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\r\n}\r\n.uploader-example .uploader-btn {\r\n  margin-right: 4px;\r\n}\r\n.uploader-example .uploader-list {\r\n  max-height: 440px;\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n}\r\n</style>"]}]}