{"remainingRequest":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\view\\system\\state.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\view\\system\\state.vue","mtime":1618795335796},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBnZXRTeXN0ZW1TdGF0ZSB9IGZyb20gIkAvYXBpL3N5c3RlbS5qcyI7DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJTdGF0ZSIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHRpbWVyOm51bGwsDQogICAgICBzdGF0ZToge30sDQogICAgICBjb2xvcnM6IFsNCiAgICAgICAgeyBjb2xvcjogIiM1Y2I4N2EiLCBwZXJjZW50YWdlOiAyMCB9LA0KICAgICAgICB7IGNvbG9yOiAiI2U2YTIzYyIsIHBlcmNlbnRhZ2U6IDQwIH0sDQogICAgICAgIHsgY29sb3I6ICIjZjU2YzZjIiwgcGVyY2VudGFnZTogODAgfSwNCiAgICAgIF0sDQogICAgfTsNCiAgfSwNCiAgY3JlYXRlZCgpIHsgDQogICAgdGhpcy5yZWxvYWQoKTsNCiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgdGhpcy5yZWxvYWQoKTsNCiAgICB9LCAxMDAwKjEwKTsNCiAgfSwNCiAgYmVmb3JlRGVzdHJveSgpew0KICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcikNCiAgICB0aGlzLnRpbWVyID0gbnVsbA0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgcmVsb2FkKCkgew0KICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBnZXRTeXN0ZW1TdGF0ZSgpOw0KICAgICAgdGhpcy5zdGF0ZSA9IGRhdGEuc2VydmVyOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["state.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"state.vue","sourceRoot":"src/view/system","sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"15\" class=\"system_state\">\r\n      <el-col :span=\"12\">\r\n        <el-card v-if=\"state.os\" class=\"card_item\">\r\n          <div slot=\"header\">Runtime</div>\r\n          <div>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">os:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.goos\"></el-col>\r\n            </el-row>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">cpu nums:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.numCpu\"></el-col>\r\n            </el-row>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">compiler:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.compiler\"></el-col>\r\n            </el-row>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">go version:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.goVersion\"></el-col>\r\n            </el-row>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">goroutine nums:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.numGoroutine\"></el-col>\r\n            </el-row>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card v-if=\"state.disk\" class=\"card_item\">\r\n          <div slot=\"header\">Disk</div>\r\n          <div>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">total (MB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.disk.totalMb\"></el-col>\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">used (MB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.disk.usedMb\"></el-col>\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">total (GB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.disk.totalGb\"></el-col>\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">used (GB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.disk.usedGb\"></el-col>\r\n                </el-row>\r\n              </el-col>\r\n              <el-col :span=\"12\">\r\n                <el-progress\r\n                  type=\"dashboard\"\r\n                  :percentage=\"state.disk.usedPercent\"\r\n                  :color=\"colors\"\r\n                ></el-progress>\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"15\" class=\"system_state\">\r\n      <el-col :span=\"12\">\r\n        <el-card\r\n          class=\"card_item\"\r\n          v-if=\"state.cpu\"\r\n          :body-style=\"{ height: '180px', 'overflow-y': 'scroll' }\"\r\n        >\r\n          <div slot=\"header\">CPU</div>\r\n          <div>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">physical number of cores:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.cpu.cores\"> </el-col>\r\n            </el-row>\r\n            <template v-for=\"(item, index) in state.cpu.cpus\">\r\n              <el-row :key=\"index\" :gutter=\"10\">\r\n                <el-col :span=\"12\">core {{ index }}:</el-col>\r\n                <el-col :span=\"12\"\r\n                  ><el-progress\r\n                    type=\"line\"\r\n                    :percentage=\"+item.toFixed(0)\"\r\n                    :color=\"colors\"\r\n                  ></el-progress\r\n                ></el-col>\r\n              </el-row>\r\n            </template>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"card_item\" v-if=\"state.ram\">\r\n          <div slot=\"header\">Ram</div>\r\n          <div>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">total (MB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.ram.totalMb\"></el-col>\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">used (MB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.ram.usedMb\"></el-col>\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">total (GB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.ram.totalMb / 1024\"></el-col>\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">used (GB)</el-col>\r\n                  <el-col\r\n                    :span=\"12\"\r\n                    v-text=\"(state.ram.usedMb / 1024).toFixed(2)\"\r\n                  ></el-col>\r\n                </el-row>\r\n              </el-col>\r\n              <el-col :span=\"12\">\r\n                <el-progress\r\n                  type=\"dashboard\"\r\n                  :percentage=\"state.ram.usedPercent\"\r\n                  :color=\"colors\"\r\n                ></el-progress>\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getSystemState } from \"@/api/system.js\";\r\nexport default {\r\n  name: \"State\",\r\n  data() {\r\n    return {\r\n      timer:null,\r\n      state: {},\r\n      colors: [\r\n        { color: \"#5cb87a\", percentage: 20 },\r\n        { color: \"#e6a23c\", percentage: 40 },\r\n        { color: \"#f56c6c\", percentage: 80 },\r\n      ],\r\n    };\r\n  },\r\n  created() { \r\n    this.reload();\r\n    this.timer = setInterval(() => {\r\n      this.reload();\r\n    }, 1000*10);\r\n  },\r\n  beforeDestroy(){\r\n    clearInterval(this.timer)\r\n    this.timer = null\r\n  },\r\n  methods: {\r\n    async reload() {\r\n      const { data } = await getSystemState();\r\n      this.state = data.server;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.system_state {\r\n  padding: 10px;\r\n}\r\n\r\n.card_item {\r\n  height: 280px;\r\n}\r\n</style>\r\n"]}]}