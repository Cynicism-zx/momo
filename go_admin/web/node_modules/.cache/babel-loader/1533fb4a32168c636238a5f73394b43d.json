{"remainingRequest":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--0-0!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\view\\superAdmin\\api\\api.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\view\\superAdmin\\api\\api.vue","mtime":1618795335791},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["api.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search-term\">\r\n      <el-form :inline=\"true\" :model=\"searchInfo\" class=\"demo-form-inline\">\r\n        <el-form-item label=\"路径\">\r\n          <el-input placeholder=\"路径\" v-model=\"searchInfo.path\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input placeholder=\"描述\" v-model=\"searchInfo.description\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"api组\">\r\n          <el-input placeholder=\"api组\" v-model=\"searchInfo.apiGroup\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"请求\">\r\n          <el-select clearable placeholder=\"请选择\" v-model=\"searchInfo.method\">\r\n            <el-option\r\n              :key=\"item.value\"\r\n              :label=\"`${item.label}(${item.value})`\"\r\n              :value=\"item.value\"\r\n              v-for=\"item in methodOptions\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"onSubmit\" type=\"primary\">查询</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"openDialog('addApi')\" type=\"primary\">新增api</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-popover placement=\"top\" v-model=\"deleteVisible\" width=\"160\">\r\n            <p>确定要删除吗？</p>\r\n              <div style=\"text-align: right; margin: 0\">\r\n                <el-button @click=\"deleteVisible = false\" size=\"mini\" type=\"text\">取消</el-button>\r\n                <el-button @click=\"onDelete\" size=\"mini\" type=\"primary\">确定</el-button>\r\n              </div>\r\n            <el-button icon=\"el-icon-delete\" size=\"mini\" slot=\"reference\" type=\"danger\">批量删除</el-button>\r\n          </el-popover>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <el-table :data=\"tableData\" @sort-change=\"sortChange\" border stripe @selection-change=\"handleSelectionChange\">\r\n       <el-table-column\r\n        type=\"selection\"\r\n        width=\"55\">\r\n      </el-table-column>\r\n      <el-table-column label=\"id\" min-width=\"60\" prop=\"ID\" sortable=\"custom\"></el-table-column>\r\n      <el-table-column label=\"api路径\" min-width=\"150\" prop=\"path\" sortable=\"custom\"></el-table-column>\r\n      <el-table-column label=\"api分组\" min-width=\"150\" prop=\"apiGroup\" sortable=\"custom\"></el-table-column>\r\n      <el-table-column label=\"api简介\" min-width=\"150\" prop=\"description\" sortable=\"custom\"></el-table-column>\r\n      <el-table-column label=\"请求\" min-width=\"150\" prop=\"method\" sortable=\"custom\">\r\n        <template slot-scope=\"scope\">\r\n          <div>\r\n            {{scope.row.method}}\r\n            <el-tag\r\n              :key=\"scope.row.methodFiletr\"\r\n              :type=\"scope.row.method|tagTypeFiletr\"\r\n              effect=\"dark\"\r\n              size=\"mini\"\r\n            >{{scope.row.method|methodFiletr}}</el-tag>\r\n            <!-- {{scope.row.method|methodFiletr}} -->\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button @click=\"editApi(scope.row)\" size=\"small\" type=\"primary\" icon=\"el-icon-edit\">编辑</el-button>\r\n          <el-button\r\n            @click=\"deleteApi(scope.row)\"\r\n            size=\"small\"\r\n            type=\"danger\"\r\n            icon=\"el-icon-delete\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n      :current-page=\"page\"\r\n      :page-size=\"pageSize\"\r\n      :page-sizes=\"[10, 30, 50, 100]\"\r\n      :style=\"{float:'right',padding:'20px'}\"\r\n      :total=\"total\"\r\n      @current-change=\"handleCurrentChange\"\r\n      @size-change=\"handleSizeChange\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n    ></el-pagination>\r\n\r\n    <el-dialog :before-close=\"closeDialog\" :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" label-width=\"80px\" ref=\"apiForm\">\r\n        <el-form-item label=\"路径\" prop=\"path\">\r\n          <el-input autocomplete=\"off\" v-model=\"form.path\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"请求\" prop=\"method\">\r\n          <el-select placeholder=\"请选择\" v-model=\"form.method\">\r\n            <el-option\r\n              :key=\"item.value\"\r\n              :label=\"`${item.label}(${item.value})`\"\r\n              :value=\"item.value\"\r\n              v-for=\"item in methodOptions\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"api分组\" prop=\"apiGroup\">\r\n          <el-input autocomplete=\"off\" v-model=\"form.apiGroup\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"api简介\" prop=\"description\">\r\n          <el-input autocomplete=\"off\" v-model=\"form.description\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"warning\">新增Api需要在角色管理内配置权限才可使用</div>\r\n      <div class=\"dialog-footer\" slot=\"footer\">\r\n        <el-button @click=\"closeDialog\">取 消</el-button>\r\n        <el-button @click=\"enterDialog\" type=\"primary\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n// 获取列表内容封装在mixins内部  getTableData方法 初始化已封装完成 条件搜索时候 请把条件安好后台定制的结构体字段 放到 this.searchInfo 中即可实现条件搜索\r\n\r\nimport {\r\n  getApiById,\r\n  getApiList,\r\n  createApi,\r\n  updateApi,\r\n  deleteApi,\r\n  deleteApisByIds\r\n} from \"@/api/api\";\r\nimport infoList from \"@/mixins/infoList\";\r\nimport { toSQLLine } from \"@/utils/stringFun\";\r\nconst methodOptions = [\r\n  {\r\n    value: \"POST\",\r\n    label: \"创建\",\r\n    type: \"success\"\r\n  },\r\n  {\r\n    value: \"GET\",\r\n    label: \"查看\",\r\n    type: \"\"\r\n  },\r\n  {\r\n    value: \"PUT\",\r\n    label: \"更新\",\r\n    type: \"warning\"\r\n  },\r\n  {\r\n    value: \"DELETE\",\r\n    label: \"删除\",\r\n    type: \"danger\"\r\n  }\r\n];\r\n\r\nexport default {\r\n  name: \"Api\",\r\n  mixins: [infoList],\r\n  data() {\r\n    return {\r\n      deleteVisible:false,\r\n      listApi: getApiList,\r\n      dialogFormVisible: false,\r\n      dialogTitle: \"新增Api\",\r\n      apis:[],\r\n      form: {\r\n        path: \"\",\r\n        apiGroup: \"\",\r\n        method: \"\",\r\n        description: \"\"\r\n      },\r\n      methodOptions: methodOptions,\r\n      type: \"\",\r\n      rules: {\r\n        path: [{ required: true, message: \"请输入api路径\", trigger: \"blur\" }],\r\n        apiGroup: [\r\n          { required: true, message: \"请输入组名称\", trigger: \"blur\" }\r\n        ],\r\n        method: [\r\n          { required: true, message: \"请选择请求方式\", trigger: \"blur\" }\r\n        ],\r\n        description: [\r\n          { required: true, message: \"请输入api介绍\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    //  选中api\r\n      handleSelectionChange(val) {\r\n        this.apis = val;\r\n      },\r\n      async onDelete(){\r\n        const ids = this.apis.map(item=>item.ID)\r\n        const res = await deleteApisByIds({ids})\r\n        if(res.code==0){\r\n          this.$message({\r\n            type:\"success\",\r\n            message:res.msg\r\n          })\r\n         if (this.tableData.length == ids.length) {\r\n              this.page--;\r\n          }\r\n          this.deleteVisible = false\r\n          this.getTableData()\r\n        }\r\n      },\r\n    // 排序\r\n    sortChange({ prop, order }) {\r\n      if (prop) {\r\n        this.searchInfo.orderKey = toSQLLine(prop);\r\n        this.searchInfo.desc = order == \"descending\";\r\n      }\r\n      this.getTableData();\r\n    },\r\n    //条件搜索前端看此方法\r\n    onSubmit() {\r\n      this.page = 1;\r\n      this.pageSize = 10;\r\n      this.getTableData();\r\n    },\r\n    initForm() {\r\n      this.$refs.apiForm.resetFields();\r\n      this.form = {\r\n        path: \"\",\r\n        apiGroup: \"\",\r\n        method: \"\",\r\n        description: \"\"\r\n      };\r\n    },\r\n    closeDialog() {\r\n      this.initForm();\r\n      this.dialogFormVisible = false;\r\n    },\r\n    openDialog(type) {\r\n      switch (type) {\r\n        case \"addApi\":\r\n          this.dialogTitlethis = \"新增Api\";\r\n          break;\r\n        case \"edit\":\r\n          this.dialogTitlethis = \"编辑Api\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.type = type;\r\n      this.dialogFormVisible = true;\r\n    },\r\n    async editApi(row) {\r\n      const res = await getApiById({ id: row.ID });\r\n      this.form = res.data.api;\r\n      this.openDialog(\"edit\");\r\n    },\r\n    async deleteApi(row) {\r\n      this.$confirm(\"此操作将永久删除所有角色下该api, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(async () => {\r\n          const res = await deleteApi(row);\r\n          if (res.code == 0) {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"删除成功!\"\r\n            });\r\n            if (this.tableData.length == 1) {\r\n              this.page--;\r\n            }\r\n            this.getTableData();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    async enterDialog() {\r\n      this.$refs.apiForm.validate(async valid => {\r\n        if (valid) {\r\n          switch (this.type) {\r\n            case \"addApi\":\r\n              {\r\n                const res = await createApi(this.form);\r\n                if (res.code == 0) {\r\n                  this.$message({\r\n                    type: \"success\",\r\n                    message: \"添加成功\",\r\n                    showClose: true\r\n                  });\r\n                }\r\n                this.getTableData();\r\n                this.closeDialog();\r\n              }\r\n\r\n              break;\r\n            case \"edit\":\r\n              {\r\n                const res = await updateApi(this.form);\r\n                if (res.code == 0) {\r\n                  this.$message({\r\n                    type: \"success\",\r\n                    message: \"编辑成功\",\r\n                    showClose: true\r\n                  });\r\n                }\r\n                this.getTableData();\r\n                this.closeDialog();\r\n              }\r\n              break;\r\n            default:\r\n              {\r\n                this.$message({\r\n                  type: \"error\",\r\n                  message: \"未知操作\",\r\n                  showClose: true\r\n                });\r\n              }\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  },\r\n  filters: {\r\n    methodFiletr(value) {\r\n      const target = methodOptions.filter(item => item.value === value)[0];\r\n      // return target && `${target.label}(${target.value})`\r\n      return target && `${target.label}`;\r\n    },\r\n    tagTypeFiletr(value) {\r\n      const target = methodOptions.filter(item => item.value === value)[0];\r\n      return target && `${target.type}`;\r\n    }\r\n  },\r\n  created() {\r\n    this.getTableData();\r\n  }\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.button-box {\r\n  padding: 10px 20px;\r\n  .el-button {\r\n    float: right;\r\n  }\r\n}\r\n.el-tag--mini {\r\n  margin-left: 5px;\r\n}\r\n.warning {\r\n  color: #dc143c;\r\n}\r\n</style>"],"sourceRoot":"src/view/superAdmin/api"}]}