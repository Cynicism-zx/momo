{"remainingRequest":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_eslint-loader@2.2.1@eslint-loader\\index.js??ref--13-0!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\api\\excel.js","dependencies":[{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\api\\excel.js","mtime":1618795335759},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_eslint-loader@2.2.1@eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9NZXNzYWdlMiBmcm9tICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9tZXNzYWdlLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX01lc3NhZ2UgZnJvbSAiZWxlbWVudC11aS9saWIvbWVzc2FnZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC5qcyI7CmltcG9ydCBzZXJ2aWNlIGZyb20gJ0AvdXRpbHMvcmVxdWVzdCc7Cgp2YXIgaGFuZGxlRmlsZUVycm9yID0gZnVuY3Rpb24gaGFuZGxlRmlsZUVycm9yKHJlcywgZmlsZU5hbWUpIHsKICBpZiAodHlwZW9mIHJlcy5kYXRhICE9PSAidW5kZWZpbmVkIikgewogICAgaWYgKHJlcy5kYXRhLnR5cGUgPT0gImFwcGxpY2F0aW9uL2pzb24iKSB7CiAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoKICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgbWVzc2FnZSA9IEpTT04ucGFyc2UocmVhZGVyLnJlc3VsdCkubXNnOwoKICAgICAgICBfTWVzc2FnZSh7CiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLAogICAgICAgICAgdHlwZTogJ2Vycm9yJwogICAgICAgIH0pOwogICAgICB9OwoKICAgICAgcmVhZGVyLnJlYWRBc1RleHQobmV3IEJsb2IoW3Jlcy5kYXRhXSkpOwogICAgfQogIH0gZWxzZSB7CiAgICB2YXIgZG93bmxvYWRVcmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihbcmVzXSkpOwogICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICBhLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICBhLmhyZWYgPSBkb3dubG9hZFVybDsKICAgIGEuZG93bmxvYWQgPSBmaWxlTmFtZTsKICAgIHZhciBldmVudCA9IG5ldyBNb3VzZUV2ZW50KCJjbGljayIpOwogICAgYS5kaXNwYXRjaEV2ZW50KGV2ZW50KTsKICB9Cn07IC8vIEBUYWdzIGV4Y2VsCi8vIEBTdW1tYXJ5IOWvvOWHukV4Y2VsCi8vIEBTZWN1cml0eSBBcGlLZXlBdXRoCi8vIEBhY2NlcHQgYXBwbGljYXRpb24vanNvbgovLyBAUHJvZHVjZSAgYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtCi8vIEBQYXJhbSBkYXRhIGJvZHkgbW9kZWwuRXhjZWxJbmZvIHRydWUgIuWvvOWHukV4Y2Vs5paH5Lu25L+h5oGvIgovLyBAU3VjY2VzcyAyMDAKLy8gQFJvdXRlciAvZXhjZWwvZXhwb3J0RXhjZWwgW3Bvc3RdCgoKZXhwb3J0IHZhciBleHBvcnRFeGNlbCA9IGZ1bmN0aW9uIGV4cG9ydEV4Y2VsKHRhYmxlRGF0YSwgZmlsZU5hbWUpIHsKICBzZXJ2aWNlKHsKICAgIHVybDogIi9leGNlbC9leHBvcnRFeGNlbCIsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgZmlsZU5hbWU6IGZpbGVOYW1lLAogICAgICBpbmZvTGlzdDogdGFibGVEYXRhCiAgICB9LAogICAgcmVzcG9uc2VUeXBlOiAnYmxvYicKICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgIGhhbmRsZUZpbGVFcnJvcihyZXMsIGZpbGVOYW1lKTsKICB9KTsKfTsgLy8gQFRhZ3MgZXhjZWwKLy8gQFN1bW1hcnkg5a+85YWlRXhjZWzmlofku7YKLy8gQFNlY3VyaXR5IEFwaUtleUF1dGgKLy8gQGFjY2VwdCBtdWx0aXBhcnQvZm9ybS1kYXRhCi8vIEBQcm9kdWNlICBhcHBsaWNhdGlvbi9qc29uCi8vIEBQYXJhbSBmaWxlIGZvcm1EYXRhIGZpbGUgdHJ1ZSAi5a+85YWlRXhjZWzmlofku7YiCi8vIEBTdWNjZXNzIDIwMCB7c3RyaW5nfSBzdHJpbmcgInsic3VjY2VzcyI6dHJ1ZSwiZGF0YSI6e30sIm1zZyI6IuWvvOWFpeaIkOWKnyJ9IgovLyBAUm91dGVyIC9leGNlbC9pbXBvcnRFeGNlbCBbcG9zdF0KCmV4cG9ydCB2YXIgbG9hZEV4Y2VsRGF0YSA9IGZ1bmN0aW9uIGxvYWRFeGNlbERhdGEoKSB7CiAgcmV0dXJuIHNlcnZpY2UoewogICAgdXJsOiAiL2V4Y2VsL2xvYWRFeGNlbCIsCiAgICBtZXRob2Q6ICdnZXQnCiAgfSk7Cn07IC8vIEBUYWdzIGV4Y2VsCi8vIEBTdW1tYXJ5IOS4i+i9veaooeadvwovLyBAU2VjdXJpdHkgQXBpS2V5QXV0aAovLyBAYWNjZXB0IG11bHRpcGFydC9mb3JtLWRhdGEKLy8gQFByb2R1Y2UgIGFwcGxpY2F0aW9uL2pzb24KLy8gQFBhcmFtIGZpbGVOYW1lIHF1ZXJ5IGZpbGVOYW1lIHRydWUgIuaooeadv+WQjeensCIKLy8gQFN1Y2Nlc3MgMjAwCi8vIEBSb3V0ZXIgL2V4Y2VsL2Rvd25sb2FkVGVtcGxhdGUgW2dldF0KCmV4cG9ydCB2YXIgZG93bmxvYWRUZW1wbGF0ZSA9IGZ1bmN0aW9uIGRvd25sb2FkVGVtcGxhdGUoZmlsZU5hbWUpIHsKICByZXR1cm4gc2VydmljZSh7CiAgICB1cmw6ICIvZXhjZWwvZG93bmxvYWRUZW1wbGF0ZSIsCiAgICBtZXRob2Q6ICdnZXQnLAogICAgcGFyYW1zOiB7CiAgICAgIGZpbGVOYW1lOiBmaWxlTmFtZQogICAgfSwKICAgIHJlc3BvbnNlVHlwZTogJ2Jsb2InCiAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICBoYW5kbGVGaWxlRXJyb3IocmVzLCBmaWxlTmFtZSk7CiAgfSk7Cn07"},{"version":3,"sources":["E:/BaiduNetdiskDownload/gin-vue-admin/web/src/api/excel.js"],"names":["service","handleFileError","res","fileName","data","type","reader","FileReader","onload","message","JSON","parse","result","msg","showClose","readAsText","Blob","downloadUrl","window","URL","createObjectURL","a","document","createElement","style","display","href","download","event","MouseEvent","dispatchEvent","exportExcel","tableData","url","method","infoList","responseType","then","loadExcelData","downloadTemplate","params"],"mappings":";;;;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,QAAN,EAAmB;AACvC,MAAI,OAAOD,GAAG,CAACE,IAAX,KAAqB,WAAzB,EAAsC;AAClC,QAAIF,GAAG,CAACE,IAAJ,CAASC,IAAT,IAAiB,kBAArB,EAAyC;AACrC,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,YAAW;AACvB,YAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,MAAlB,EAA0BC,GAAxC;;AACA,iBAAQ;AACJC,UAAAA,SAAS,EAAE,IADP;AAEJL,UAAAA,OAAO,EAAEA,OAFL;AAGJJ,UAAAA,IAAI,EAAE;AAHF,SAAR;AAKH,OAPD;;AAQAC,MAAAA,MAAM,CAACS,UAAP,CAAkB,IAAIC,IAAJ,CAAS,CAACd,GAAG,CAACE,IAAL,CAAT,CAAlB;AACH;AACJ,GAbD,MAaO;AACH,QAAIa,WAAW,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIJ,IAAJ,CAAS,CAACd,GAAD,CAAT,CAA3B,CAAlB;AACA,QAAImB,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACAF,IAAAA,CAAC,CAACG,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACAJ,IAAAA,CAAC,CAACK,IAAF,GAAST,WAAT;AACAI,IAAAA,CAAC,CAACM,QAAF,GAAaxB,QAAb;AACA,QAAIyB,KAAK,GAAG,IAAIC,UAAJ,CAAe,OAAf,CAAZ;AACAR,IAAAA,CAAC,CAACS,aAAF,CAAgBF,KAAhB;AACH;AACJ,CAvBD,C,CAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAY7B,QAAZ,EAAyB;AAChDH,EAAAA,OAAO,CAAC;AACJiC,IAAAA,GAAG,EAAE,oBADD;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJ9B,IAAAA,IAAI,EAAE;AACFD,MAAAA,QAAQ,EAAEA,QADR;AAEFgC,MAAAA,QAAQ,EAAEH;AAFR,KAHF;AAOJI,IAAAA,YAAY,EAAE;AAPV,GAAD,CAAP,CAQGC,IARH,CAQQ,UAACnC,GAAD,EAAS;AACbD,IAAAA,eAAe,CAACC,GAAD,EAAMC,QAAN,CAAf;AACH,GAVD;AAWH,CAZM,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMmC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAOtC,OAAO,CAAC;AACXiC,IAAAA,GAAG,EAAE,kBADM;AAEXC,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACpC,QAAD,EAAc;AAC1C,SAAOH,OAAO,CAAC;AACXiC,IAAAA,GAAG,EAAE,yBADM;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXM,IAAAA,MAAM,EAAE;AACJrC,MAAAA,QAAQ,EAAEA;AADN,KAHG;AAMXiC,IAAAA,YAAY,EAAE;AANH,GAAD,CAAP,CAOJC,IAPI,CAOC,UAACnC,GAAD,EAAS;AACbD,IAAAA,eAAe,CAACC,GAAD,EAAMC,QAAN,CAAf;AACH,GATM,CAAP;AAUH,CAXM","sourcesContent":["import service from '@/utils/request';\r\nimport { Message } from 'element-ui';\r\n\r\nconst handleFileError = (res, fileName) => {\r\n    if (typeof(res.data) !== \"undefined\") {\r\n        if (res.data.type == \"application/json\") {\r\n            const reader = new FileReader();\r\n            reader.onload = function() {\r\n                let message = JSON.parse(reader.result).msg;\r\n                Message({\r\n                    showClose: true,\r\n                    message: message,\r\n                    type: 'error'\r\n                })\r\n            };\r\n            reader.readAsText(new Blob([res.data]));\r\n        }\r\n    } else {\r\n        var downloadUrl = window.URL.createObjectURL(new Blob([res]));\r\n        var a = document.createElement('a');\r\n        a.style.display = 'none';\r\n        a.href = downloadUrl;\r\n        a.download = fileName;\r\n        var event = new MouseEvent(\"click\");\r\n        a.dispatchEvent(event);\r\n    }\r\n}\r\n\r\n// @Tags excel\r\n// @Summary 导出Excel\r\n// @Security ApiKeyAuth\r\n// @accept application/json\r\n// @Produce  application/octet-stream\r\n// @Param data body model.ExcelInfo true \"导出Excel文件信息\"\r\n// @Success 200\r\n// @Router /excel/exportExcel [post]\r\nexport const exportExcel = (tableData, fileName) => {\r\n    service({\r\n        url: \"/excel/exportExcel\",\r\n        method: 'post',\r\n        data: {\r\n            fileName: fileName,\r\n            infoList: tableData\r\n        },\r\n        responseType: 'blob'\r\n    }).then((res) => {\r\n        handleFileError(res, fileName)\r\n    })\r\n}\r\n\r\n// @Tags excel\r\n// @Summary 导入Excel文件\r\n// @Security ApiKeyAuth\r\n// @accept multipart/form-data\r\n// @Produce  application/json\r\n// @Param file formData file true \"导入Excel文件\"\r\n// @Success 200 {string} string \"{\"success\":true,\"data\":{},\"msg\":\"导入成功\"}\"\r\n// @Router /excel/importExcel [post]\r\nexport const loadExcelData = () => {\r\n    return service({\r\n        url: \"/excel/loadExcel\",\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n// @Tags excel\r\n// @Summary 下载模板\r\n// @Security ApiKeyAuth\r\n// @accept multipart/form-data\r\n// @Produce  application/json\r\n// @Param fileName query fileName true \"模板名称\"\r\n// @Success 200\r\n// @Router /excel/downloadTemplate [get]\r\nexport const downloadTemplate = (fileName) => {\r\n    return service({\r\n        url: \"/excel/downloadTemplate\",\r\n        method: 'get',\r\n        params: {\r\n            fileName: fileName\r\n        },\r\n        responseType: 'blob'\r\n    }).then((res) => {\r\n        handleFileError(res, fileName)\r\n    })\r\n}"]}]}