{"remainingRequest":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_eslint-loader@2.2.1@eslint-loader\\index.js??ref--13-0!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\permission.js","dependencies":[{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\permission.js","mtime":1618795335770},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_eslint-loader@2.2.1@eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovQmFpZHVOZXRkaXNrRG93bmxvYWQvZ2luLXZ1ZS1hZG1pbi93ZWIvbm9kZV9tb2R1bGVzL19AYmFiZWxfcnVudGltZUA3LjEzLjEwQEBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovQmFpZHVOZXRkaXNrRG93bmxvYWQvZ2luLXZ1ZS1hZG1pbi93ZWIvbm9kZV9tb2R1bGVzL19AYmFiZWxfcnVudGltZUA3LjEzLjEwQEBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHsgc3RvcmUgfSBmcm9tICdAL3N0b3JlL2luZGV4JzsKaW1wb3J0IGdldFBhZ2VUaXRsZSBmcm9tICdAL3V0aWxzL3BhZ2UnOwp2YXIgYXN5bmNSb3V0ZXJGbGFnID0gMDsKdmFyIHdoaXRlTGlzdCA9IFsnbG9naW4nLCAnaW5pdCddOwpyb3V0ZXIuYmVmb3JlRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0bywgZnJvbSwgbmV4dCkgewogICAgdmFyIHRva2VuLCBhc3luY1JvdXRlcnM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHRva2VuID0gc3RvcmUuZ2V0dGVyc1sndXNlci90b2tlbiddOyAvLyDlnKjnmb3lkI3ljZXkuK3nmoTliKTmlq3mg4XlhrUKICAgICAgICAgICAgLy/kv67mlLnnvZHpobXmoIfnrb7lkI3np7AKCiAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gZ2V0UGFnZVRpdGxlKHRvLm1ldGEudGl0bGUpOwoKICAgICAgICAgICAgaWYgKCEod2hpdGVMaXN0LmluZGV4T2YodG8ubmFtZSkgPiAtMSkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRva2VuKSB7CiAgICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgICBuYW1lOiBzdG9yZS5nZXR0ZXJzWyJ1c2VyL3VzZXJJbmZvIl0uYXV0aG9yaXR5LmRlZmF1bHRSb3V0ZXIKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBpZiAoIXRva2VuKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoISghYXN5bmNSb3V0ZXJGbGFnICYmIHN0b3JlLmdldHRlcnNbJ3JvdXRlci9hc3luY1JvdXRlcnMnXS5sZW5ndGggPT0gMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGFzeW5jUm91dGVyRmxhZysrOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgncm91dGVyL1NldEFzeW5jUm91dGVyJyk7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgYXN5bmNSb3V0ZXJzID0gc3RvcmUuZ2V0dGVyc1sncm91dGVyL2FzeW5jUm91dGVycyddOwogICAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFzeW5jUm91dGVycyk7CiAgICAgICAgICAgIG5leHQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0byksIHt9LCB7CiAgICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZQogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgbmV4dCgpOwoKICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgIC8vIOS4jeWcqOeZveWQjeWNleS4reW5tuS4lOacqueZu+mZhueahOaXtuWAmQogICAgICAgICAgICBpZiAoIXRva2VuKSB7CiAgICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgICBuYW1lOiAibG9naW4iLAogICAgICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgICAgICAgcmVkaXJlY3Q6IGRvY3VtZW50LmxvY2F0aW9uLmhhc2gKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOw=="},{"version":3,"sources":["E:/BaiduNetdiskDownload/gin-vue-admin/web/src/permission.js"],"names":["router","store","getPageTitle","asyncRouterFlag","whiteList","beforeEach","to","from","next","token","getters","document","title","meta","indexOf","name","authority","defaultRouter","length","dispatch","asyncRouters","addRoutes","replace","query","redirect","location","hash"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,IAAIC,eAAe,GAAG,CAAtB;AAEA,IAAMC,SAAS,GAAG,CAAC,OAAD,EAAS,MAAT,CAAlB;AACAJ,MAAM,CAACK,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YAAAA,KADQ,GACAR,KAAK,CAACS,OAAN,CAAc,YAAd,CADA,EAEV;AACA;;AACJC,YAAAA,QAAQ,CAACC,KAAT,GAAiBV,YAAY,CAACI,EAAE,CAACO,IAAH,CAAQD,KAAT,CAA7B;;AAJc,kBAKVR,SAAS,CAACU,OAAV,CAAkBR,EAAE,CAACS,IAArB,IAA6B,CAAC,CALpB;AAAA;AAAA;AAAA;;AAMV,gBAAIN,KAAJ,EAAW;AACPD,cAAAA,IAAI,CAAC;AAAEO,gBAAAA,IAAI,EAAEd,KAAK,CAACS,OAAN,CAAc,eAAd,EAA+BM,SAA/B,CAAyCC;AAAjD,eAAD,CAAJ;AACH,aAFD,MAEO;AACHT,cAAAA,IAAI;AACP;;AAVS;AAAA;;AAAA;AAAA,iBAaNC,KAbM;AAAA;AAAA;AAAA;;AAAA,kBAeF,CAACN,eAAD,IAAoBF,KAAK,CAACS,OAAN,CAAc,qBAAd,EAAqCQ,MAArC,IAA+C,CAfjE;AAAA;AAAA;AAAA;;AAgBFf,YAAAA,eAAe;AAhBb;AAAA,mBAiBIF,KAAK,CAACkB,QAAN,CAAe,uBAAf,CAjBJ;;AAAA;AAkBIC,YAAAA,YAlBJ,GAkBmBnB,KAAK,CAACS,OAAN,CAAc,qBAAd,CAlBnB;AAmBFV,YAAAA,MAAM,CAACqB,SAAP,CAAiBD,YAAjB;AACAZ,YAAAA,IAAI,iCAAKF,EAAL;AAASgB,cAAAA,OAAO,EAAE;AAAlB,eAAJ;AApBE;AAAA;;AAAA;AAsBFd,YAAAA,IAAI;;AAtBF;AAyBV;AACA,gBAAI,CAACC,KAAL,EAAY;AACRD,cAAAA,IAAI,CAAC;AACDO,gBAAAA,IAAI,EAAE,OADL;AAEDQ,gBAAAA,KAAK,EAAE;AACHC,kBAAAA,QAAQ,EAAEb,QAAQ,CAACc,QAAT,CAAkBC;AADzB;AAFN,eAAD,CAAJ;AAMH;;AAjCS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import router from './router'\r\nimport { store } from '@/store/index'\r\nimport getPageTitle from '@/utils/page'\r\n\r\nlet asyncRouterFlag = 0\r\n\r\nconst whiteList = ['login','init']\r\nrouter.beforeEach(async(to, from, next) => {\r\n    const token = store.getters['user/token']\r\n        // 在白名单中的判断情况\r\n        //修改网页标签名称\r\n    document.title = getPageTitle(to.meta.title)\r\n    if (whiteList.indexOf(to.name) > -1) {\r\n        if (token) {\r\n            next({ name: store.getters[\"user/userInfo\"].authority.defaultRouter })\r\n        } else {\r\n            next()\r\n        }\r\n    } else {\r\n        // 不在白名单中并且已经登陆的时候\r\n        if (token) {\r\n            // 添加flag防止多次获取动态路由和栈溢出\r\n            if (!asyncRouterFlag && store.getters['router/asyncRouters'].length == 0) {\r\n                asyncRouterFlag++\r\n                await store.dispatch('router/SetAsyncRouter')\r\n                const asyncRouters = store.getters['router/asyncRouters']\r\n                router.addRoutes(asyncRouters)\r\n                next({...to, replace: true })\r\n            } else {\r\n                next()\r\n            }\r\n        }\r\n        // 不在白名单中并且未登陆的时候\r\n        if (!token) {\r\n            next({\r\n                name: \"login\",\r\n                query: {\r\n                    redirect: document.location.hash\r\n                }\r\n            })\r\n        }\r\n    }\r\n})"]}]}