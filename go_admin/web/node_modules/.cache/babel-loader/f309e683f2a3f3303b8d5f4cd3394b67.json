{"remainingRequest":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_eslint-loader@2.2.1@eslint-loader\\index.js??ref--13-0!E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\utils\\image.js","dependencies":[{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\src\\utils\\image.js","mtime":1618795335776},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\BaiduNetdiskDownload\\gin-vue-admin\\web\\node_modules\\_eslint-loader@2.2.1@eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJFOi9CYWlkdU5ldGRpc2tEb3dubG9hZC9naW4tdnVlLWFkbWluL3dlYi9ub2RlX21vZHVsZXMvX0BiYWJlbF9ydW50aW1lQDcuMTMuMTBAQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkU6L0JhaWR1TmV0ZGlza0Rvd25sb2FkL2dpbi12dWUtYWRtaW4vd2ViL25vZGVfbW9kdWxlcy9fQGJhYmVsX3J1bnRpbWVANy4xMy4xMEBAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS1idWZmZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS1idWZmZXIuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS51aW50OC1hcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmNvcHktd2l0aGluLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZXZlcnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWxsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5kZXgtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmpvaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5sYXN0LWluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmVkdWNlLXJpZ2h0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkucmV2ZXJzZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zdWJhcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLWxvY2FsZS1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmcuanMiOwoKdmFyIEltYWdlQ29tcHJlc3MgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEltYWdlQ29tcHJlc3MoZmlsZSwgZmlsZVNpemUpIHsKICAgIHZhciBtYXhXSCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogMTkyMDsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW1hZ2VDb21wcmVzcyk7CgogICAgdGhpcy5maWxlID0gZmlsZTsKICAgIHRoaXMuZmlsZVNpemUgPSBmaWxlU2l6ZTsKICAgIHRoaXMubWF4V0ggPSBtYXhXSDsgLy8g5pyA5aSn6ZW/5a69CiAgfQoKICBfY3JlYXRlQ2xhc3MoSW1hZ2VDb21wcmVzcywgW3sKICAgIGtleTogImNvbXByZXNzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wcmVzcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8vIOWOi+e8qQogICAgICB2YXIgZmlsZVR5cGUgPSB0aGlzLmZpbGUudHlwZTsKICAgICAgdmFyIGZpbGVTaXplID0gdGhpcy5maWxlLnNpemUgLyAxMDI0OwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChfdGhpcy5maWxlKTsKCiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTsKICAgICAgICAgIHZhciBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTsKICAgICAgICAgIGltZy5zcmMgPSByZWFkZXIucmVzdWx0OwoKICAgICAgICAgIGltZy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTsKCiAgICAgICAgICAgIHZhciBfZFdIID0gX3RoaXMuZFdIKGltZy53aWR0aCwgaW1nLmhlaWdodCwgX3RoaXMubWF4V0gpOwoKICAgICAgICAgICAgY2FudmFzLndpZHRoID0gX2RXSC53aWR0aDsKICAgICAgICAgICAgY2FudmFzLmhlaWdodCA9IF9kV0guaGVpZ2h0OyAvLyDmuIXnqbrlkI4sIOmHjeWGmeeUu+W4gwoKICAgICAgICAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOwogICAgICAgICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsKICAgICAgICAgICAgdmFyIG5ld0ltZ0RhdGEgPSBjYW52YXMudG9EYXRhVVJMKGZpbGVUeXBlLCAwLjkwKTsgLy8g5Y6L57yp5a696auY5ZCO55qE5Zu+5YOP5aSn5bCPCgogICAgICAgICAgICB2YXIgbmV3SW1nU2l6ZSA9IF90aGlzLmZpbGVTaXplS0IobmV3SW1nRGF0YSk7CgogICAgICAgICAgICBpZiAobmV3SW1nU2l6ZSA+IF90aGlzLmZpbGVTaXplKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+WbvueJh+WwuuWvuOWkquWkpyEnICsgZmlsZVNpemUgKyAiID4+ICIgKyBuZXdJbWdTaXplKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIGJsb2IgPSBfdGhpcy5kYXRhVVJMdG9CbG9iKG5ld0ltZ0RhdGEsIGZpbGVUeXBlKTsKCiAgICAgICAgICAgIHZhciBuZmlsZSA9IG5ldyBGaWxlKFtibG9iXSwgX3RoaXMuZmlsZS5uYW1lKTsKICAgICAgICAgICAgcmVzb2x2ZShuZmlsZSk7CiAgICAgICAgICB9OwogICAgICAgIH07CiAgICAgIH0pOwogICAgfQogICAgLyoNCiAgICAgKiDplb/lrr3nrYnmr5TnvKnlsI8NCiAgICAgKiDlm77lg4/nmoTkuIDovrko6ZW/5oiW5a69KeS4uuacgOWkp+ebruagh+WAvA0KICAgICAqICovCgogIH0sIHsKICAgIGtleTogImRXSCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZFdIKHNyY1csIHNyY0gsIGRNYXgpIHsKICAgICAgdmFyIGRlZmF1bHRzID0gewogICAgICAgIHdpZHRoOiBzcmNXLAogICAgICAgIGhlaWdodDogc3JjSAogICAgICB9OwoKICAgICAgaWYgKE1hdGgubWF4KHNyY1csIHNyY0gpID4gZE1heCkgewogICAgICAgIGlmIChzcmNXID4gc3JjSCkgewogICAgICAgICAgZGVmYXVsdHMud2lkdGggPSBkTWF4OwogICAgICAgICAgZGVmYXVsdHMuaGVpZ2h0ID0gTWF0aC5yb3VuZChzcmNIICogKGRNYXggLyBzcmNXKSk7CiAgICAgICAgICByZXR1cm4gZGVmYXVsdHM7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGRlZmF1bHRzLmhlaWdodCA9IGRNYXg7CiAgICAgICAgICBkZWZhdWx0cy53aWR0aCA9IE1hdGgucm91bmQoc3JjVyAqIChkTWF4IC8gc3JjSCkpOwogICAgICAgICAgcmV0dXJuIGRlZmF1bHRzOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZGVmYXVsdHM7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJmaWxlU2l6ZUtCIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmaWxlU2l6ZUtCKGRhdGFVUkwpIHsKICAgICAgdmFyIHNpemVLQiA9IDA7CiAgICAgIHNpemVLQiA9IE1hdGgucm91bmQoZGF0YVVSTC5zcGxpdCgnLCcpWzFdLmxlbmd0aCAqIDMgLyA0IC8gMTAyNCk7CiAgICAgIHJldHVybiBzaXplS0I7CiAgICB9CiAgICAvKg0KICAgICAqIOi9rOS4ukJsb2INCiAgICAgKiAqLwoKICB9LCB7CiAgICBrZXk6ICJkYXRhVVJMdG9CbG9iIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkYXRhVVJMdG9CbG9iKGRhdGFVUkwsIGZpbGVUeXBlKSB7CiAgICAgIHZhciBieXRlU3RyaW5nID0gYXRvYihkYXRhVVJMLnNwbGl0KCcsJylbMV0pOwogICAgICB2YXIgbWltZVN0cmluZyA9IGRhdGFVUkwuc3BsaXQoJywnKVswXS5zcGxpdCgnOicpWzFdLnNwbGl0KCc7JylbMF07CiAgICAgIHZhciBhYiA9IG5ldyBBcnJheUJ1ZmZlcihieXRlU3RyaW5nLmxlbmd0aCk7CiAgICAgIHZhciBpYSA9IG5ldyBVaW50OEFycmF5KGFiKTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYnl0ZVN0cmluZy5sZW5ndGg7IGkrKykgewogICAgICAgIGlhW2ldID0gYnl0ZVN0cmluZy5jaGFyQ29kZUF0KGkpOwogICAgICB9CgogICAgICBpZiAoZmlsZVR5cGUpIHsKICAgICAgICBtaW1lU3RyaW5nID0gZmlsZVR5cGU7CiAgICAgIH0KCiAgICAgIHJldHVybiBuZXcgQmxvYihbYWJdLCB7CiAgICAgICAgdHlwZTogbWltZVN0cmluZywKICAgICAgICBsYXN0TW9kaWZpZWREYXRlOiBuZXcgRGF0ZSgpCiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEltYWdlQ29tcHJlc3M7Cn0oKTsKCmV4cG9ydCB7IEltYWdlQ29tcHJlc3MgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["E:/BaiduNetdiskDownload/gin-vue-admin/web/src/utils/image.js"],"names":["ImageCompress","file","fileSize","maxWH","fileType","type","size","Promise","resolve","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","img","src","result","ctx","getContext","_dWH","dWH","width","height","clearRect","drawImage","newImgData","toDataURL","newImgSize","fileSizeKB","console","log","blob","dataURLtoBlob","nfile","File","name","srcW","srcH","dMax","defaults","Math","max","round","dataURL","sizeKB","split","length","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","lastModifiedDate","Date"],"mappings":"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","sourcesContent":["export default class ImageCompress {\r\n    constructor(file, fileSize, maxWH = 1920) {\r\n        this.file = file\r\n        this.fileSize = fileSize\r\n        this.maxWH = maxWH // 最大长宽\r\n    }\r\n\r\n    compress() {\r\n        // 压缩\r\n        const fileType = this.file.type\r\n        const fileSize = this.file.size / 1024\r\n        return new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(this.file);\r\n            reader.onload = () => {\r\n                const canvas = document.createElement('canvas');\r\n                const img = document.createElement('img');\r\n                img.src = reader.result;\r\n                img.onload = () => {\r\n                    const ctx = canvas.getContext('2d');\r\n                    let _dWH = this.dWH(img.width, img.height, this.maxWH)\r\n                    canvas.width = _dWH.width\r\n                    canvas.height = _dWH.height\r\n\r\n                    // 清空后, 重写画布\r\n                    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height)\r\n\r\n                    let newImgData = canvas.toDataURL(fileType, 0.90)\r\n\r\n                    // 压缩宽高后的图像大小\r\n                    let newImgSize = this.fileSizeKB(newImgData)\r\n\r\n                    if (newImgSize > this.fileSize) {\r\n                        console.log('图片尺寸太大!' + fileSize + \" >> \" + newImgSize)\r\n                    }\r\n\r\n                    let blob = this.dataURLtoBlob(newImgData, fileType)\r\n                    let nfile = new File([blob], this.file.name);\r\n                    resolve(nfile)\r\n                };\r\n            };\r\n        });\r\n    }\r\n\r\n    /*\r\n     * 长宽等比缩小\r\n     * 图像的一边(长或宽)为最大目标值\r\n     * */\r\n    dWH(srcW, srcH, dMax) {\r\n\r\n        let defaults = {\r\n            width: srcW,\r\n            height: srcH\r\n        }\r\n        if (Math.max(srcW, srcH) > dMax) {\r\n            if (srcW > srcH) {\r\n                defaults.width = dMax\r\n                defaults.height = Math.round(srcH * (dMax / srcW))\r\n                return defaults\r\n            } else {\r\n                defaults.height = dMax\r\n                defaults.width = Math.round(srcW * (dMax / srcH))\r\n                return defaults\r\n            }\r\n        } else {\r\n            return defaults\r\n        }\r\n    }\r\n\r\n    fileSizeKB(dataURL) {\r\n        let sizeKB = 0\r\n        sizeKB = Math.round((dataURL.split(',')[1].length * 3 / 4) / 1024)\r\n        return sizeKB\r\n    }\r\n\r\n    /*\r\n     * 转为Blob\r\n     * */\r\n    dataURLtoBlob(dataURL, fileType) {\r\n        let byteString = atob(dataURL.split(',')[1])\r\n        let mimeString = dataURL.split(',')[0].split(':')[1].split(';')[0]\r\n        let ab = new ArrayBuffer(byteString.length)\r\n        let ia = new Uint8Array(ab)\r\n        for (let i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i)\r\n        }\r\n        if (fileType) {\r\n            mimeString = fileType\r\n        }\r\n        return new Blob([ab], { type: mimeString, lastModifiedDate: new Date() })\r\n    }\r\n\r\n}"]}]}